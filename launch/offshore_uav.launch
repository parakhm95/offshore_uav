<launch>

  <!-- defines name of the namespace of the drone -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="RUN_TYPE" default="$(env RUN_TYPE)" />

  <arg name="simulation" default="true" />
  <arg name="config_flocking" default="" />

  <!-- will it run using GNU debugger? -->
  <arg name="DEBUG" default="false" />
  <arg unless="$(arg DEBUG)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg DEBUG)" name="launch_prefix_debug" value="debug_roslaunch"/>

  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_flocking_manager" />
  <arg name="n_threads" default="8" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <!-- Namespace -->
  <group ns="$(arg UAV_NAME)">

    <node pkg="nodelet" type="nodelet" name="offshore_uav" args="$(arg nodelet) offshore_uav/OffshoreUAV $(arg nodelet_manager)" launch-prefix="$(arg launch_prefix_debug)" output="screen">

      <!-- Parameters loaded from launch file -->
      <param name="simulation" value="$(eval arg('RUN_TYPE') == 'simulation')" />
      <param name="uav_name" value="$(arg UAV_NAME)" />

      <!-- ROS parameters config file -->
      <rosparam file="$(find offshore_uav)/config/points.yaml" />
       <rosparam file="$(find offshore_uav)/config/default.yaml" />

      <!-- Load a user param file -->
      <rosparam if="$(eval not arg('config_flocking') == '')" file="$(arg config_flocking)" />

      <!-- Services -->
      <remap from="~start_state_machine_in" to="automatic_start/start" />

    </node>

  </group>

</launch>
